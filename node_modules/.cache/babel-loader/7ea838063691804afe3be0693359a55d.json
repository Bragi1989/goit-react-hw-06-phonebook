{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: {\n    items: [],\n    filter: ''\n  },\n  reducers: {\n    addContact: (state, action) => {\n      const {\n        id,\n        name,\n        number\n      } = action.payload;\n      if (name && number) {\n        const existingContactIndex = state.items.findIndex(contact => contact.name.toLowerCase() === name.toLowerCase());\n        if (existingContactIndex === -1) {\n          state.items.push({\n            id,\n            name,\n            number\n          });\n        }\n      }\n    },\n    deleteContact: (state, action) => {\n      const indexToDelete = state.items.findIndex(contact => contact.id === action.payload);\n      if (indexToDelete !== -1) {\n        state.items.splice(indexToDelete, 1);\n      }\n    },\n    updateFilter: (state, action) => {\n      state.filter = action.payload;\n    },\n    clearContacts: state => {\n      state.items = [];\n    }\n  }\n});\nexport const {\n  addContact,\n  deleteContact,\n  updateFilter,\n  clearContacts\n} = contactsSlice.actions;\nexport default contactsSlice.reducer;","map":{"version":3,"names":["createSlice","contactsSlice","name","initialState","items","filter","reducers","addContact","state","action","id","number","payload","existingContactIndex","findIndex","contact","toLowerCase","push","deleteContact","indexToDelete","splice","updateFilter","clearContacts","actions","reducer"],"sources":["D:/GitHub/goit-react-hw-06-phonebook/src/components/redux/contactsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst contactsSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState: {\r\n    items: [],\r\n    filter: '',\r\n  },\r\n  reducers: {\r\n    addContact: (state, action) => {\r\n      const { id, name, number } = action.payload;\r\n\r\n      if (name && number) {\r\n        const existingContactIndex = state.items.findIndex(\r\n          (contact) => contact.name.toLowerCase() === name.toLowerCase()\r\n        );\r\n\r\n        if (existingContactIndex === -1) {\r\n          state.items.push({ id, name, number });\r\n        }\r\n      }\r\n    },\r\n    deleteContact: (state, action) => {\r\n      const indexToDelete = state.items.findIndex((contact) => contact.id === action.payload);\r\n\r\n      if (indexToDelete !== -1) {\r\n        state.items.splice(indexToDelete, 1);\r\n      }\r\n    },\r\n    updateFilter: (state, action) => {\r\n      state.filter = action.payload;\r\n    },\r\n    clearContacts: (state) => {\r\n      state.items = [];\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addContact, deleteContact, updateFilter, clearContacts } = contactsSlice.actions;\r\nexport default contactsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,aAAa,GAAGD,WAAW,CAAC;EAChCE,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE;EACV,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAM;QAAEC,EAAE;QAAER,IAAI;QAAES;MAAO,CAAC,GAAGF,MAAM,CAACG,OAAO;MAE3C,IAAIV,IAAI,IAAIS,MAAM,EAAE;QAClB,MAAME,oBAAoB,GAAGL,KAAK,CAACJ,KAAK,CAACU,SAAS,CAC/CC,OAAO,IAAKA,OAAO,CAACb,IAAI,CAACc,WAAW,CAAC,CAAC,KAAKd,IAAI,CAACc,WAAW,CAAC,CAC/D,CAAC;QAED,IAAIH,oBAAoB,KAAK,CAAC,CAAC,EAAE;UAC/BL,KAAK,CAACJ,KAAK,CAACa,IAAI,CAAC;YAAEP,EAAE;YAAER,IAAI;YAAES;UAAO,CAAC,CAAC;QACxC;MACF;IACF,CAAC;IACDO,aAAa,EAAEA,CAACV,KAAK,EAAEC,MAAM,KAAK;MAChC,MAAMU,aAAa,GAAGX,KAAK,CAACJ,KAAK,CAACU,SAAS,CAAEC,OAAO,IAAKA,OAAO,CAACL,EAAE,KAAKD,MAAM,CAACG,OAAO,CAAC;MAEvF,IAAIO,aAAa,KAAK,CAAC,CAAC,EAAE;QACxBX,KAAK,CAACJ,KAAK,CAACgB,MAAM,CAACD,aAAa,EAAE,CAAC,CAAC;MACtC;IACF,CAAC;IACDE,YAAY,EAAEA,CAACb,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACH,MAAM,GAAGI,MAAM,CAACG,OAAO;IAC/B,CAAC;IACDU,aAAa,EAAGd,KAAK,IAAK;MACxBA,KAAK,CAACJ,KAAK,GAAG,EAAE;IAClB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEG,UAAU;EAAEW,aAAa;EAAEG,YAAY;EAAEC;AAAc,CAAC,GAAGrB,aAAa,CAACsB,OAAO;AAC/F,eAAetB,aAAa,CAACuB,OAAO"},"metadata":{},"sourceType":"module"}