{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState: {\n    items: [],\n    filter: ''\n  },\n  reducers: {\n    addContact: (state, action) => {\n      const newName = action.payload.name || '';\n      const existingContact = state.items.find(contact => contact.name.toLowerCase() === newName.toLowerCase());\n      if (!existingContact) {\n        state.items.push(action.payload);\n      }\n    },\n    deleteContact: (state, action) => {\n      state.items = state.items.filter(contact => contact.id !== action.payload);\n    },\n    updateFilter: (state, action) => {\n      state.filter = action.payload;\n    },\n    clearContacts: state => {\n      state.items = [];\n    }\n  }\n});\nexport const {\n  addContact,\n  deleteContact,\n  updateFilter,\n  clearContacts\n} = contactsSlice.actions;\nexport default contactsSlice.reducer;","map":{"version":3,"names":["createSlice","contactsSlice","name","initialState","items","filter","reducers","addContact","state","action","newName","payload","existingContact","find","contact","toLowerCase","push","deleteContact","id","updateFilter","clearContacts","actions","reducer"],"sources":["D:/GitHub/goit-react-hw-06-phonebook/src/components/redux/contactsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst contactsSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState: {\r\n    items: [],\r\n    filter: '',\r\n  },\r\n  reducers: {\r\n addContact: (state, action) => {\r\n  const newName = action.payload.name || '';\r\n  const existingContact = state.items.find(\r\n    (contact) => contact.name.toLowerCase() === newName.toLowerCase()\r\n  );\r\n\r\n  if (!existingContact) {\r\n    state.items.push(action.payload);\r\n  }\r\n},\r\n    deleteContact: (state, action) => {\r\n      state.items = state.items.filter((contact) => contact.id !== action.payload);\r\n    },\r\n    updateFilter: (state, action) => {\r\n      state.filter = action.payload;\r\n    },\r\n    clearContacts: (state) => {\r\n      state.items = [];\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addContact, deleteContact, updateFilter, clearContacts } = contactsSlice.actions;\r\nexport default contactsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,aAAa,GAAGD,WAAW,CAAC;EAChCE,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE;EACV,CAAC;EACDC,QAAQ,EAAE;IACXC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO,CAACT,IAAI,IAAI,EAAE;MACzC,MAAMU,eAAe,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CACrCC,OAAO,IAAKA,OAAO,CAACZ,IAAI,CAACa,WAAW,CAAC,CAAC,KAAKL,OAAO,CAACK,WAAW,CAAC,CAClE,CAAC;MAED,IAAI,CAACH,eAAe,EAAE;QACpBJ,KAAK,CAACJ,KAAK,CAACY,IAAI,CAACP,MAAM,CAACE,OAAO,CAAC;MAClC;IACF,CAAC;IACGM,aAAa,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACC,MAAM,CAAES,OAAO,IAAKA,OAAO,CAACI,EAAE,KAAKT,MAAM,CAACE,OAAO,CAAC;IAC9E,CAAC;IACDQ,YAAY,EAAEA,CAACX,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACH,MAAM,GAAGI,MAAM,CAACE,OAAO;IAC/B,CAAC;IACDS,aAAa,EAAGZ,KAAK,IAAK;MACxBA,KAAK,CAACJ,KAAK,GAAG,EAAE;IAClB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEG,UAAU;EAAEU,aAAa;EAAEE,YAAY;EAAEC;AAAc,CAAC,GAAGnB,aAAa,CAACoB,OAAO;AAC/F,eAAepB,aAAa,CAACqB,OAAO"},"metadata":{},"sourceType":"module"}